/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

/*void function(struct TreeNode* root,int* arr,int* index,int* height)
{
    if(root->left==NULL && root->right==NULL)
    {
        (*height)++;
        *(arr+(*index))=root->val;
        (*index)++;
        *(arr+(*index))=(*height);
        (*index)++;
        return;
    }
    function(root->left,arr,index,height);
    function(root->right,arr,index,height);
}*/

int minDepth(struct TreeNode* root){
    if(root==NULL)
        return 0;
    /*int i1;
    int leaf[100];
    int i=0;
    int height=1;
    
    function(root,leaf,&i,&height);
    for(i1=0;i1<i;i1++)
    {
        printf("%d/",leaf[i1]);
    }
    
    int min=INT_MAX;
    for(i1=1;i1<i;i1=i1+2)
    {
        if(leaf[i1]<min)
        {
            min=leaf[i1];
        }
    }
return min;*/
    
    if(root->left==NULL && root->right==NULL)
    {
        return 1;
    }
    
    int left = minDepth(root->left);
    int right= minDepth(root->right);
    
    if(root->left==NULL)
    {
        return right+1;
    }
    
    if(root->right ==NULL)
    {
        return left+1;
    }
    
    
    
    return left<right?left+1:right+1;
}
